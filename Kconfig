#
# Copyright (c) 2021 Laird Connectivity
#
# SPDX-License-Identifier: Apache-2.0
#
menuconfig ATTR
	bool "Enable attribute/parameters module"
	depends on FILE_SYSTEM_UTILITIES
	depends on LCZ_PARAM_FILE

if ATTR

config ATTR_BROADCAST
	bool "Send framework broadcast when values change"
	depends on FRAMEWORK
	help
	  Broadcast flag must be set in attributes.json

config ATTR_INIT_PRIORITY
	int "Init priority Application for attribute module"
	range 2 99
	default 2
	help
	  Can't be higher than LCZ_PARAM_FILE_INIT_PRIORITY.
	  Recommended to be higher than main thread init priority.

config ATTR_LOG_LEVEL
	int "Log level for Attributes module"
	range 0 4
	default 3

config ATTR_FILE_NAME
	string "File name for attributes"
	default "attr.txt"

config ATTR_BREAK_ON_LOAD_FAILURE
	bool "Stop loading on first failure"

config ATTR_STRING_NAME
	bool "Enable string name storage/retrieval"
	default y
	help
	  Will allow storage and retrieval of attribute names, this will
	  increase flash usage somewhat.

config ATTR_SHELL
	bool "Enable Attribute Shell"
	depends on SHELL

if ATTR_SHELL

config ATTR_SHELL_FACTORY_RESET_MSG
	bool "Enable generation of factory reset message from shell"
	depends on FRAMEWORK
	default y if ATTR_SHELL && FRAMEWORK

config ATTR_SHELL_LOCK
	bool "Enable settings lock shell manipulation"
	depends on ATTR_SETTINGS_LOCK
	default y if SHELL && ATTR_SETTINGS_LOCK
	help
	  Allows the configuration lock to be enabled, disabled, set,
	  removed and checked via the 'lock' shell commands.

config ATTR_SHELL_DATA_MANIPULATION
	bool "Enable data manipilation functions"
	help
	  Allows shell functions that can be used to manipulate data in
	  the attribute module, bypassing restrictions.

	  Note: As this bypasses limitations placed on the attributes
	        module, it should not be used for secure production code.

config ATTR_SHELL_SETTINGS_MANIPULATION
	bool "Enable settings manipulation functions"
	help
	  Allows shell functions that can be used to manipulate settings
	  of attributes in the attribute module.

	  Note: As this can bypass limitations placed on the attributes
	        module, it should not be used for secure production code.

choice ATTR_SHELL_CONFIG_MANIPULATION_MODE
	prompt "Configuration manipulation"
	default ATTR_SHELL_CONFIG_MANIPULATION_ALL if !ATTR_SHELL_LOCK
	default ATTR_SHELL_CONFIG_MANIPULATION_LIMITED_WITH_LOCK if ATTR_SHELL_LOCK
	help
	  Allows shell functions that can be used to manipulate
	  configuration in the attribute module.

config ATTR_SHELL_CONFIG_MANIPULATION_ALL
	bool "All enabled (unrestricted)"
	help
	  Allows all attribute shell configuration manipulation
	  functions.

	  Note: As this can bypass limitations placed on the attributes
	        module, it should not be used for secure production code.

config ATTR_SHELL_CONFIG_MANIPULATION_ALL_WITH_LOCK
	bool "All enabled (restricted with configuration lock)"
	depends on ATTR_SHELL_LOCK
	help
	  Allows all attribute shell configuration manipulation
	  functions, protected by the configuration lock.

config ATTR_SHELL_CONFIG_MANIPULATION_LIMITED
	bool "Limited functionality"
	help
	  Allows load and dump attribute shell configuration
	  manipulation functions, other shell configuration functions
	  are disabled.

config ATTR_SHELL_CONFIG_MANIPULATION_LIMITED_WITH_LOCK
	bool "Limited functionality (restricted with configuration lock)"
	depends on ATTR_SHELL_LOCK
	help
	  Allows load and dump attribute shell configuration
	  manipulation functions, protected by the configuration lock,
	  other shell configuration functions are disable.

config ATTR_SHELL_CONFIG_MANIPULATION_NONE
	bool "Disabled"
	help
	  Disables all attribute shell configuration manipulation
	  functions.

endchoice

config ATTR_SHELL_QRTC_SET
	bool "Enable QRTC set function"
	help
	  Allows setting the QRTC value from the shell.

endif # ATTR_SHELL

config ATTR_SHOW_FMT
	string "Format for the attribute show command index name"
	default "[%03u] %-30s"

config ATTR_FLOAT_FMT
	string "Default format for floats"
	default "%.4e"

config ATTR_FLOAT_MAX_STR_SIZE
	int "Number of characters (and NULL) for floats converted to string"
	default 13
	help
	  An example with ATTR_FLOAT_FMT of %0.4e is -2.8171e+000.

config ATTR_DEFERRED_SAVE
	bool "Enable deferred attribute saving"
	help
	  This enables deferred saving of attribute data to storage,
	  which saves the attributes data in the background on a timer.
	  If this option is disabled and 5 attributes are changed in a
	  row, this results in 5 erase/write cycles, with this option
	  enabled it will keep the changes in RAM and then write them
	  out later, resulting in 1 erase/write cycle.

	  Note: Due to deferring the save process, this increases the
	        chances of losing attribute data if e.g. power is lost
	        prior to an update cycle running and completing.

if ATTR_DEFERRED_SAVE

config ATTR_SAVE_DELAY_MS
	int "Time (in ms) before saving attributes to storage"
	default 30000
	range 1000 3600000
	help
	  This is how long after an attribute is changed before the
	  change will be written back to the storage device (which will
	  also include any additional changes up to the point of save).

config ATTR_SAVE_STATUS_CALLBACK
	bool "Save status callbacks"
	help
	  This will allow the application to be notified when the
	  attributes are modified but not yet saved to the storage
	  device or when saving to the storage device has completed.
	  From the user application, attr_save_status_notification()
	  needs to be implemented.

endif # ATTR_DEFERRED_SAVE

config ATTR_SETTINGS_LOCK
	bool "Enable settings lock"
	help
	  The settings lock can be used to restrict altering module
	  configuration/settings by protecting it with a 6-digit
	  passcode. Once set and enabled, the settings passcode must be
	  entered prior to making changes to configuration.

config ATTR_CONFIGURATION_VERSION
	bool "Configuration version attribute support"
	help
	  Adds support for the configuration version attribute which is
	  used as a volatile value to indicate the version of the
	  running configuration (reset on power cycle or reboot).

config MCUMGR_CMD_ATTRIBUTE_MGMT
	bool "Enable the attribute MCUMGR interface"
	depends on MCUMGR

if MCUMGR_CMD_ATTRIBUTE_MGMT

config ATTRIBUTE_MGMT_MEMFAULT_FILE_NAME
	string "File name used for writing memfault data"
	depends on LCZ_MEMFAULT_FILE
	default "/lfs/mflt.bin"

config ATTRIBUTE_MGMT_FACTORY_RESET
	bool "Factory reset request support"
	help
	  Adds support for issuing a factory reset command to the
	  application.

config ATTRIBUTE_MGMT_DUMP_USER_FILE_NAME
	bool "Allow user-specified dump file name"
	help
	  Allows the user to select the output file name and path to
	  dump the attributes to when using the SMP dump command,
	  otherwise uses the value in the attribute.

config MGMT_GROUP_ID_ATTRIBUTE
	int "MCU manager group id for attribute management"
	default 65

config ATTRIBUTE_MGMT_INCREMENT_CONFIG_VERSION
	bool "Increment config version from SMP set parameter"
	depends on ATTR_CONFIGURATION_VERSION
	help
	  Will increment the configuration version attribute upon a
	  successful SMP set parameter being executed, requires the
	  config version attribute to be present.

endif # MCUMGR_CMD_ATTRIBUTE_MGMT

config ATTR_LOAD_FEEDBACK
	bool "Create feedback files when loading parameters"
	help
	  When enabled, will create feedback files when the SMP or shell
	  load parameter commands are used which can then be retrieved
	  to see if any attributes could not be set.

if ATTR_LOAD_FEEDBACK

config ATTRIBUTE_MGMT_FEEDBACK_FILE
	string "File name used for feedback for SMP load function"
	default "/ext/load_bt_feedback.txt"
	depends on MCUMGR_CMD_ATTRIBUTE_MGMT
	help
	  This is the full path and file name for the feedback file
	  which is output when the load parameter management command is
	  used.

config ATTR_SHELL_FEEDBACK_FILE
	string "File name used for feedback for shell load function"
	default "/ext/load_shell_feedback.txt"
	depends on ATTR_SHELL
	help
	  This is the full path and file name for the feedback file
	  which is output when the load parameter shell command is used.

endif # ATTR_LOAD_FEEDBACK

endif # ATTR
