/**
 * @file attr_table.h
 *
 * @brief This is generated by attribute_generator.py
 *
 * Copyright (c) 2021 Laird Connectivity
 *
 * SPDX-License-Identifier: Apache-2.0
 */
#ifndef __ATTRIBUTE_TABLE_H__
#define __ATTRIBUTE_TABLE_H__

/******************************************************************************/
/* Includes                                                                   */
/******************************************************************************/
#include <zephyr.h>
#include <zephyr/types.h>
#include <stddef.h>

#include "attr_defs.h"

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************/
/* Indices                                                                    */
/******************************************************************************/

/* pystart - attribute indices */
#define ATTR_INDEX_lock                               5
#define ATTR_INDEX_load_path                          173
/* pyend */

/* pystart - attribute ids */
#define ATTR_ID_sensor_name                           0
#define ATTR_ID_location                              1
#define ATTR_ID_advertising_interval                  2
#define ATTR_ID_advertising_duration                  3
#define ATTR_ID_passkey                               4
#define ATTR_ID_lock                                  5
#define ATTR_ID_power_sense_interval                  6
#define ATTR_ID_temperature_sense_interval            7
#define ATTR_ID_aggregation_count                     8
#define ATTR_ID_digital_output_1_state                9
#define ATTR_ID_digital_output_2_state                10
#define ATTR_ID_firmware_version                      11
#define ATTR_ID_reset_reason                          12
#define ATTR_ID_bluetooth_address                     13
#define ATTR_ID_reset_count                           14
#define ATTR_ID_bootloader_version                    15
#define ATTR_ID_up_time                               16
#define ATTR_ID_high_temp_1_thresh_1                  17
#define ATTR_ID_high_temp_1_thresh_2                  18
#define ATTR_ID_low_temp_1_thresh_1                   19
#define ATTR_ID_low_temp_1_thresh_2                   20
#define ATTR_ID_temp_1_delta_thresh                   21
#define ATTR_ID_high_temp_2_thresh_1                  22
#define ATTR_ID_high_temp_2_thresh_2                  23
#define ATTR_ID_low_temp_2_thresh_1                   24
#define ATTR_ID_low_temp_2_thresh_2                   25
#define ATTR_ID_temp_2_delta_thresh                   26
#define ATTR_ID_high_temp_3_thresh_1                  27
#define ATTR_ID_high_temp_3_thresh_2                  28
#define ATTR_ID_low_temp_3_thresh_1                   29
#define ATTR_ID_low_temp_3_thresh_2                   30
#define ATTR_ID_temp_3_delta_thresh                   31
#define ATTR_ID_high_temp_4_thresh_1                  32
#define ATTR_ID_high_temp_4_thresh_2                  33
#define ATTR_ID_low_temp_4_thresh_1                   34
#define ATTR_ID_low_temp_4_thresh_2                   35
#define ATTR_ID_temp_4_delta_thresh                   36
#define ATTR_ID_high_analog_1_thresh_1                37
#define ATTR_ID_high_analog_1_thresh_2                38
#define ATTR_ID_low_analog_1_thresh_1                 39
#define ATTR_ID_low_analog_1_thresh_2                 40
#define ATTR_ID_analog_1_delta_thresh                 41
#define ATTR_ID_high_analog_2_thresh_1                42
#define ATTR_ID_high_analog_2_thresh_2                43
#define ATTR_ID_low_analog_2_thresh_1                 44
#define ATTR_ID_low_analog_2_thresh_2                 45
#define ATTR_ID_analog_2_delta_thresh                 46
#define ATTR_ID_high_analog_3_thresh_1                47
#define ATTR_ID_high_analog_3_thresh_2                48
#define ATTR_ID_low_analog_3_thresh_1                 49
#define ATTR_ID_low_analog_3_thresh_2                 50
#define ATTR_ID_analog_3_delta_thresh                 51
#define ATTR_ID_high_analog_4_thresh_1                52
#define ATTR_ID_high_analog_4_thresh_2                53
#define ATTR_ID_low_analog_4_thresh_1                 54
#define ATTR_ID_low_analog_4_thresh_2                 55
#define ATTR_ID_analog_4_delta_thresh                 56
#define ATTR_ID_active_mode                           57
#define ATTR_ID_advertising_phy                       58
#define ATTR_ID_tx_power                              59
#define ATTR_ID_network_id                            60
#define ATTR_ID_config_version                        61
#define ATTR_ID_config_type                           62
#define ATTR_ID_hardware_minor_version                63
#define ATTR_ID_ge                                    64
#define ATTR_ID_oe                                    65
#define ATTR_ID_old_coefficient_a                     66
#define ATTR_ID_old_coefficient_b                     67
#define ATTR_ID_old_coefficient_c                     68
#define ATTR_ID_thermistor_config                     69
#define ATTR_ID_temperature_result_1                  70
#define ATTR_ID_temperature_result_2                  71
#define ATTR_ID_temperature_result_3                  72
#define ATTR_ID_temperature_result_4                  73
#define ATTR_ID_temperature_alarms                    74
#define ATTR_ID_power_voltage_mv                      75
#define ATTR_ID_digital_input                         76
#define ATTR_ID_digital_alarms                        77
#define ATTR_ID_digital_input_1_config                78
#define ATTR_ID_digital_input_2_config                79
#define ATTR_ID_analog_input_1                        80
#define ATTR_ID_analog_input_2                        81
#define ATTR_ID_analog_input_3                        82
#define ATTR_ID_analog_input_4                        83
#define ATTR_ID_analog_alarms                         84
#define ATTR_ID_analog_input_1_type                   85
#define ATTR_ID_analog_input_2_type                   86
#define ATTR_ID_analog_input_3_type                   87
#define ATTR_ID_analog_input_4_type                   88
#define ATTR_ID_flags                                 89
#define ATTR_ID_magnet_state                          90
#define ATTR_ID_param_path                            91
#define ATTR_ID_battery_age                           92
#define ATTR_ID_attribute_version                     93
#define ATTR_ID_qrtc                                  94
#define ATTR_ID_qrtc_last_set                         95
#define ATTR_ID_sh_offset                             96
#define ATTR_ID_analog_sense_interval                 97
#define ATTR_ID_tamper_switch_status                  98
#define ATTR_ID_connection_timeout_sec                99
#define ATTR_ID_settings_passcode                     100
#define ATTR_ID_therm_1_coefficient_a                 101
#define ATTR_ID_therm_2_coefficient_a                 102
#define ATTR_ID_therm_3_coefficient_a                 103
#define ATTR_ID_therm_4_coefficient_a                 104
#define ATTR_ID_therm_1_coefficient_b                 105
#define ATTR_ID_therm_2_coefficient_b                 106
#define ATTR_ID_therm_3_coefficient_b                 107
#define ATTR_ID_therm_4_coefficient_b                 108
#define ATTR_ID_therm_1_coefficient_c                 109
#define ATTR_ID_therm_2_coefficient_c                 110
#define ATTR_ID_therm_3_coefficient_c                 111
#define ATTR_ID_therm_4_coefficient_c                 112
#define ATTR_ID_data_logging_enable                   113
#define ATTR_ID_factory_reset_enable                  114
#define ATTR_ID_log_file_status                       115
#define ATTR_ID_temperature_alarms_enable             116
#define ATTR_ID_analog_alarms_enable                  117
#define ATTR_ID_adc_power_simulated                   118
#define ATTR_ID_adc_power_simulated_counts            119
#define ATTR_ID_adc_analog_sensor_simulated           120
#define ATTR_ID_adc_analog_sensor_simulated_counts    121
#define ATTR_ID_adc_thermistor_simulated              122
#define ATTR_ID_adc_thermistor_simulated_counts       123
#define ATTR_ID_adc_vref_simulated                    124
#define ATTR_ID_adc_vref_simulated_counts             125
#define ATTR_ID_voltage_1_simulated                   126
#define ATTR_ID_voltage_1_simulated_value             127
#define ATTR_ID_voltage_2_simulated                   128
#define ATTR_ID_voltage_2_simulated_value             129
#define ATTR_ID_voltage_3_simulated                   130
#define ATTR_ID_voltage_3_simulated_value             131
#define ATTR_ID_voltage_4_simulated                   132
#define ATTR_ID_voltage_4_simulated_value             133
#define ATTR_ID_ultrasonic_simulated                  134
#define ATTR_ID_ultrasonic_simulated_value            135
#define ATTR_ID_pressure_simulated                    136
#define ATTR_ID_pressure_simulated_value              137
#define ATTR_ID_current_1_simulated                   138
#define ATTR_ID_current_1_simulated_value             139
#define ATTR_ID_current_2_simulated                   140
#define ATTR_ID_current_2_simulated_value             141
#define ATTR_ID_current_3_simulated                   142
#define ATTR_ID_current_3_simulated_value             143
#define ATTR_ID_current_4_simulated                   144
#define ATTR_ID_current_4_simulated_value             145
#define ATTR_ID_vref_simulated                        146
#define ATTR_ID_vref_simulated_value                  147
#define ATTR_ID_temperature_1_simulated               148
#define ATTR_ID_temperature_1_simulated_value         149
#define ATTR_ID_temperature_2_simulated               150
#define ATTR_ID_temperature_2_simulated_value         151
#define ATTR_ID_temperature_3_simulated               152
#define ATTR_ID_temperature_3_simulated_value         153
#define ATTR_ID_temperature_4_simulated               154
#define ATTR_ID_temperature_4_simulated_value         155
#define ATTR_ID_powermv_simulated                     156
#define ATTR_ID_powermv_simulated_value               157
#define ATTR_ID_digital_input_1_simulated             158
#define ATTR_ID_digital_input_1_simulated_value       159
#define ATTR_ID_digital_input_2_simulated             160
#define ATTR_ID_digital_input_2_simulated_value       161
#define ATTR_ID_mag_switch_simulated                  162
#define ATTR_ID_mag_switch_simulated_value            163
#define ATTR_ID_tamper_switch_simulated               164
#define ATTR_ID_tamper_switch_simulated_value         165
#define ATTR_ID_boot_phy                              166
#define ATTR_ID_mobile_app_disconnect                 167
#define ATTR_ID_attr_save_error_code                  168
#define ATTR_ID_recover_settings_count                170
#define ATTR_ID_block_downgrades                      171
#define ATTR_ID_security_request                      172
#define ATTR_ID_security_level                        173
#define ATTR_ID_load_path                             208
#define ATTR_ID_dump_path                             209
#define ATTR_ID_settings_passcode_status              265
#define ATTR_ID_lock_status                           266
/* pyend */

/******************************************************************************/
/* Constants and Enumerations                                                 */
/******************************************************************************/

/* pystart - attribute constants */
#define ATTR_TABLE_SIZE                                             177
#define ATTR_TABLE_MAX_ID                                           266
#define ATTR_TABLE_WRITABLE_COUNT                                   142
#define ATTR_MAX_STR_LENGTH                                         32
#define ATTR_MAX_STR_SIZE                                           33
#define ATTR_MAX_BIN_SIZE                                           8
#define ATTR_MAX_INT_SIZE                                           8

/* Attribute Max String Lengths */
#define ATTR_SENSOR_NAME_MAX_STR_SIZE                               24
#define ATTR_LOCATION_MAX_STR_SIZE                                  33
#define ATTR_FIRMWARE_VERSION_MAX_STR_SIZE                          12
#define ATTR_RESET_REASON_MAX_STR_SIZE                              13
#define ATTR_BLUETOOTH_ADDRESS_MAX_STR_SIZE                         13
#define ATTR_BOOTLOADER_VERSION_MAX_STR_SIZE                        12
#define ATTR_PARAM_PATH_MAX_STR_SIZE                                9
#define ATTR_ATTRIBUTE_VERSION_MAX_STR_SIZE                         12
#define ATTR_LOAD_PATH_MAX_STR_SIZE                                 33
#define ATTR_DUMP_PATH_MAX_STR_SIZE                                 33

/* Attribute Byte Array Lengths */
/* pyend */

/* pystart - enumerations */
enum advertising_phy {
	ADVERTISING_PHY_CODED = 0,
	ADVERTISING_PHY_1M = 1,
};

enum config_type {
	CONFIG_TYPE_NOT_CONFIGURED = 0,
	CONFIG_TYPE_ANALOG = 1,
	CONFIG_TYPE_DIGITAL = 2,
	CONFIG_TYPE_TEMPERATURE = 3,
	CONFIG_TYPE_CURRENT = 4,
	CONFIG_TYPE_ULTRASONIC_PRESSURE = 5,
	CONFIG_TYPE_SPI_OR_I2C = 6,
};

enum temperature_alarms {
	TEMPERATURE_ALARMS_PORT1_H1_BITMASK = 1,
	TEMPERATURE_ALARMS_PORT1_H2_BITMASK = 2,
	TEMPERATURE_ALARMS_PORT1_L1_BITMASK = 4,
	TEMPERATURE_ALARMS_PORT1_L2_BITMASK = 8,
	TEMPERATURE_ALARMS_PORT1_DELTA_BITMASK = 16,
	TEMPERATURE_ALARMS_PORT2_H1_BITMASK = 32,
	TEMPERATURE_ALARMS_PORT2_H2_BITMASK = 64,
	TEMPERATURE_ALARMS_PORT2_L1_BITMASK = 128,
	TEMPERATURE_ALARMS_PORT2_L2_BITMASK = 256,
	TEMPERATURE_ALARMS_PORT2_DELTA_BITMASK = 512,
	TEMPERATURE_ALARMS_PORT3_H1_BITMASK = 1024,
	TEMPERATURE_ALARMS_PORT3_H2_BITMASK = 2048,
	TEMPERATURE_ALARMS_PORT3_L1_BITMASK = 4096,
	TEMPERATURE_ALARMS_PORT3_L2_BITMASK = 8192,
	TEMPERATURE_ALARMS_PORT3_DELTA_BITMASK = 16384,
	TEMPERATURE_ALARMS_PORT4_H1_BITMASK = 32768,
	TEMPERATURE_ALARMS_PORT4_H2_BITMASK = 65535,
	TEMPERATURE_ALARMS_PORT4_L1_BITMASK = 131072,
	TEMPERATURE_ALARMS_PORT4_L2_BITMASK = 262144,
	TEMPERATURE_ALARMS_PORT4_DELTA_BITMASK = 524288,
};

enum digital_input {
	DIGITAL_INPUT_PORT1_BITMASK = 1,
	DIGITAL_INPUT_PORT2_BITMASK = 2,
};

enum analog_alarms {
	ANALOG_ALARMS_PORT1_H1_BITMASK = 1,
	ANALOG_ALARMS_PORT1_H2_BITMASK = 2,
	ANALOG_ALARMS_PORT1_L1_BITMASK = 4,
	ANALOG_ALARMS_PORT1_L2_BITMASK = 8,
	ANALOG_ALARMS_PORT1_DELTA_BITMASK = 16,
	ANALOG_ALARMS_PORT2_H1_BITMASK = 32,
	ANALOG_ALARMS_PORT2_H2_BITMASK = 64,
	ANALOG_ALARMS_PORT2_L1_BITMASK = 128,
	ANALOG_ALARMS_PORT2_L2_BITMASK = 256,
	ANALOG_ALARMS_PORT2_DELTA_BITMASK = 512,
	ANALOG_ALARMS_PORT3_H1_BITMASK = 1024,
	ANALOG_ALARMS_PORT3_H2_BITMASK = 2048,
	ANALOG_ALARMS_PORT3_L1_BITMASK = 4096,
	ANALOG_ALARMS_PORT3_L2_BITMASK = 8192,
	ANALOG_ALARMS_PORT3_DELTA_BITMASK = 16384,
	ANALOG_ALARMS_PORT4_H1_BITMASK = 32768,
	ANALOG_ALARMS_PORT4_H2_BITMASK = 65535,
	ANALOG_ALARMS_PORT4_L1_BITMASK = 131072,
	ANALOG_ALARMS_PORT4_L2_BITMASK = 262144,
	ANALOG_ALARMS_PORT4_DELTA_BITMASK = 524288,
};

enum analog_input_1_type {
	ANALOG_INPUT_1_TYPE_UNUSED = 0,
	ANALOG_INPUT_1_TYPE_VOLTAGE_0V_TO_10V_DC = 1,
	ANALOG_INPUT_1_TYPE_CURRENT_4MA_TO_20MA = 2,
	ANALOG_INPUT_1_TYPE_PRESSURE = 3,
	ANALOG_INPUT_1_TYPE_ULTRASONIC = 4,
	ANALOG_INPUT_1_TYPE_AC_CURRENT_20A = 5,
	ANALOG_INPUT_1_TYPE_AC_CURRENT_150A = 6,
	ANALOG_INPUT_1_TYPE_AC_CURRENT_500A = 7,
};

enum magnet_state {
	MAGNET_STATE_FAR_DOOR_OPEN = true,
	MAGNET_STATE_NEAR_DOOR_CLOSED = false,
};

enum tamper_switch_status {
	TAMPER_SWITCH_STATUS_ACTIVE_NOT_PRESSED = true,
	TAMPER_SWITCH_STATUS_INACTIVE_PRESSED = false,
};

enum log_file_status {
	LOG_FILE_STATUS_WAITING_FOR_PREPARE_COMMAND = 0,
	LOG_FILE_STATUS_PREPARING = 1,
	LOG_FILE_STATUS_READY = 2,
	LOG_FILE_STATUS_FAILED = 3,
};

enum boot_phy {
	BOOT_PHY_DEFAULT = 0,
	BOOT_PHY_CODED = 1,
	BOOT_PHY_1M = 2,
};

enum settings_passcode_status {
	SETTINGS_PASSCODE_STATUS_UNDEFINED = 0,
	SETTINGS_PASSCODE_STATUS_VALID_CODE = 1,
	SETTINGS_PASSCODE_STATUS_INVALID_CODE = 2,
};

enum lock_status {
	LOCK_STATUS_NOT_SETUP = 0,
	LOCK_STATUS_SETUP_ENGAGED = 1,
	LOCK_STATUS_SETUP_DISENGAGED = 2,
};

enum attr_dump {
	ATTR_DUMP_RW = 0,
	ATTR_DUMP_W = 1,
	ATTR_DUMP_RO = 2,
};

/* pyend */

/* pystart - enum size check */
BUILD_ASSERT(sizeof(enum advertising_phy) == ATTR_SIZE_BOOL);
BUILD_ASSERT(sizeof(enum config_type) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum temperature_alarms) == ATTR_SIZE_U32);
BUILD_ASSERT(sizeof(enum digital_input) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum analog_alarms) == ATTR_SIZE_U32);
BUILD_ASSERT(sizeof(enum analog_input_1_type) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum magnet_state) == ATTR_SIZE_BOOL);
BUILD_ASSERT(sizeof(enum tamper_switch_status) == ATTR_SIZE_BOOL);
BUILD_ASSERT(sizeof(enum log_file_status) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum boot_phy) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum settings_passcode_status) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum lock_status) == ATTR_SIZE_U8);
/* pyend */

/* Sensor configuration */
#define ANALOG_INPUTS_MAX_PRESSURE_SENSORS 2
#define ANALOG_INPUTS_MAX_PRESSURE_SENSORS_WITH_ULTRASONIC 1
#define ANALOG_INPUTS_MAX_ULTRASONIC 1
#define ANALOG_INPUT_NUMBER_OF_CHANNELS 4

/******************************************************************************/
/* Global Function Prototypes                                                 */
/******************************************************************************/
/* The weak implementations should be overridden in application. */
/* pystart - prepare for read */
int attr_prepare_up_time(void);
int attr_prepare_temperature_result_1(void);
int attr_prepare_temperature_result_2(void);
int attr_prepare_temperature_result_3(void);
int attr_prepare_temperature_result_4(void);
int attr_prepare_power_voltage_mv(void);
int attr_prepare_digital_input(void);
int attr_prepare_analog_input_1(void);
int attr_prepare_analog_input_2(void);
int attr_prepare_analog_input_3(void);
int attr_prepare_analog_input_4(void);
int attr_prepare_qrtc(void);
int attr_prepare_qrtc_last_set(void);
int attr_prepare_log_file_status(void);
int attr_prepare_security_level(void);
/* pyend */

/* pystart - get string */
const char *const attr_get_string_advertising_phy(int value);
const char *const attr_get_string_config_type(int value);
const char *const attr_get_string_temperature_alarms(int value);
const char *const attr_get_string_digital_input(int value);
const char *const attr_get_string_analog_alarms(int value);
const char *const attr_get_string_analog_input_1_type(int value);
const char *const attr_get_string_magnet_state(int value);
const char *const attr_get_string_tamper_switch_status(int value);
const char *const attr_get_string_log_file_status(int value);
const char *const attr_get_string_boot_phy(int value);
const char *const attr_get_string_settings_passcode_status(int value);
const char *const attr_get_string_lock_status(int value);
/* pyend */

#ifdef __cplusplus
}
#endif

#endif /* __ATTRIBUTE_TABLE_H__ */
