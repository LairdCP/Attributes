/**
 * @file attr_table.h
 *
 * @brief This is generated by attribute_generator.py
 *
 * Copyright (c) 2021 Laird Connectivity
 *
 * SPDX-License-Identifier: Apache-2.0
 */
#ifndef __ATTRIBUTE_TABLE_H__
#define __ATTRIBUTE_TABLE_H__

/******************************************************************************/
/* Includes                                                                   */
/******************************************************************************/
#include <zephyr.h>
#include <zephyr/types.h>
#include <stddef.h>

#include "attr_defs.h"

#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************/
/* Indices                                                                    */
/******************************************************************************/

/* pystart - attribute indices */
#define ATTR_INDEX_lock                               2
#define ATTR_INDEX_load_path                          83
/* pyend */

/* pystart - attribute ids */
#define ATTR_ID_location                              1
#define ATTR_ID_passkey                               4
#define ATTR_ID_lock                                  5
#define ATTR_ID_firmware_version                      11
#define ATTR_ID_reset_reason                          12
#define ATTR_ID_bluetooth_address                     13
#define ATTR_ID_reset_count                           14
#define ATTR_ID_up_time                               16
#define ATTR_ID_tx_power                              59
#define ATTR_ID_network_id                            60
#define ATTR_ID_config_version                        61
#define ATTR_ID_hardware_minor_version                63
#define ATTR_ID_power_voltage_mv                      75
#define ATTR_ID_attribute_version                     93
#define ATTR_ID_qrtc                                  94
#define ATTR_ID_qrtc_last_set                         95
#define ATTR_ID_name                                  140
#define ATTR_ID_board                                 142
#define ATTR_ID_build_id                              143
#define ATTR_ID_app_type                              144
#define ATTR_ID_mount                                 145
#define ATTR_ID_commissioned                          146
#define ATTR_ID_cert_status                           147
#define ATTR_ID_root_ca_name                          148
#define ATTR_ID_client_cert_name                      149
#define ATTR_ID_client_key_name                       150
#define ATTR_ID_endpoint                              151
#define ATTR_ID_port                                  152
#define ATTR_ID_client_id                             153
#define ATTR_ID_topic_prefix                          154
#define ATTR_ID_gateway_state                         155
#define ATTR_ID_peer_verify                           156
#define ATTR_ID_battery_capacity                      157
#define ATTR_ID_battery_temperature                   158
#define ATTR_ID_battery_charging_state                159
#define ATTR_ID_battery_low_threshold                 160
#define ATTR_ID_battery_alarm_threshold               161
#define ATTR_ID_battery_4                             162
#define ATTR_ID_battery_3                             163
#define ATTR_ID_battery_2                             164
#define ATTR_ID_battery_1                             165
#define ATTR_ID_battery_0                             166
#define ATTR_ID_battery_alarm                         167
#define ATTR_ID_motion_odr                            168
#define ATTR_ID_motion_thresh                         169
#define ATTR_ID_motion_scale                          170
#define ATTR_ID_motion_duration                       171
#define ATTR_ID_motion_alarm                          172
#define ATTR_ID_sd_log_max_size                       173
#define ATTR_ID_ct_aes_key                            174
#define ATTR_ID_power_supply_voltage                  175
#define ATTR_ID_gateway_id                            176
#define ATTR_ID_lte_network_state                     177
#define ATTR_ID_lte_startup_state                     178
#define ATTR_ID_lte_rsrp                              179
#define ATTR_ID_lte_sinr                              180
#define ATTR_ID_lte_sleep_state                       181
#define ATTR_ID_lte_rat                               182
#define ATTR_ID_iccid                                 183
#define ATTR_ID_lte_serial_number                     184
#define ATTR_ID_lte_version                           185
#define ATTR_ID_bands                                 186
#define ATTR_ID_active_bands                          187
#define ATTR_ID_central_state                         188
#define ATTR_ID_sensor_bluetooth_address              189
#define ATTR_ID_join_delay                            190
#define ATTR_ID_join_min                              191
#define ATTR_ID_join_max                              192
#define ATTR_ID_join_interval                         193
#define ATTR_ID_modem_boot                            194
#define ATTR_ID_delay_cloud_reconnect                 195
#define ATTR_ID_apn                                   196
#define ATTR_ID_apn_username                          197
#define ATTR_ID_apn_password                          198
#define ATTR_ID_apn_control_point                     199
#define ATTR_ID_apn_status                            200
#define ATTR_ID_modem_desired_log_level               201
#define ATTR_ID_lte_operator_index                    202
#define ATTR_ID_fota_control_point                    203
#define ATTR_ID_fota_status                           204
#define ATTR_ID_fota_file_name                        205
#define ATTR_ID_fota_size                             206
#define ATTR_ID_fota_count                            207
#define ATTR_ID_load_path                             208
#define ATTR_ID_dump_path                             209
#define ATTR_ID_nv_imported                           210
#define ATTR_ID_floaty                                211
#define ATTR_ID_generate_psk                          212
#define ATTR_ID_lwm2m_psk                             213
#define ATTR_ID_lwm2m_client_id                       214
#define ATTR_ID_lwm2m_peer_url                        215
#define ATTR_ID_lte_init_error                        216
#define ATTR_ID_cloud_error                           217
#define ATTR_ID_commissioning_busy                    218
#define ATTR_ID_imsi                                  219
#define ATTR_ID_modem_functionality                   220
#define ATTR_ID_gps_rate                              242
#define ATTR_ID_gps_latitude                          243
#define ATTR_ID_gps_longitude                         244
#define ATTR_ID_gps_time                              245
#define ATTR_ID_gps_fix_type                          246
#define ATTR_ID_gps_hepe                              247
#define ATTR_ID_gps_altitude                          248
#define ATTR_ID_gps_alt_unc                           249
#define ATTR_ID_gps_heading                           250
#define ATTR_ID_gps_hor_speed                         251
#define ATTR_ID_gps_ver_speed                         252
#define ATTR_ID_gps_status                            253
#define ATTR_ID_polte_control_point                   254
#define ATTR_ID_polte_status                          255
#define ATTR_ID_polte_user                            256
#define ATTR_ID_polte_password                        257
#define ATTR_ID_polte_latitude                        258
#define ATTR_ID_polte_longitude                       259
#define ATTR_ID_polte_confidence                      260
#define ATTR_ID_polte_timestamp                       261
#define ATTR_ID_ble_prepare_timeout                   262
#define ATTR_ID_temperature_offset                    263
#define ATTR_ID_lwm2m_enable_bootstrap                264
/* pyend */

/******************************************************************************/
/* Constants and Enumerations                                                 */
/******************************************************************************/

/* pystart - attribute constants */
#define ATTR_TABLE_SIZE                                   119
#define ATTR_TABLE_MAX_ID                                 264
#define ATTR_TABLE_WRITABLE_COUNT                         51
#define ATTR_MAX_STR_LENGTH                               254
#define ATTR_MAX_STR_SIZE                                 255
#define ATTR_MAX_BIN_SIZE                                 16
#define ATTR_MAX_INT_SIZE                                 8

/* Attribute Max String Lengths */
#define ATTR_LOCATION_MAX_STR_SIZE                        33
#define ATTR_FIRMWARE_VERSION_MAX_STR_SIZE                12
#define ATTR_RESET_REASON_MAX_STR_SIZE                    13
#define ATTR_BLUETOOTH_ADDRESS_MAX_STR_SIZE               13
#define ATTR_ATTRIBUTE_VERSION_MAX_STR_SIZE               12
#define ATTR_NAME_MAX_STR_SIZE                            33
#define ATTR_BOARD_MAX_STR_SIZE                           33
#define ATTR_BUILD_ID_MAX_STR_SIZE                        65
#define ATTR_APP_TYPE_MAX_STR_SIZE                        33
#define ATTR_MOUNT_MAX_STR_SIZE                           33
#define ATTR_ROOT_CA_NAME_MAX_STR_SIZE                    49
#define ATTR_CLIENT_CERT_NAME_MAX_STR_SIZE                49
#define ATTR_CLIENT_KEY_NAME_MAX_STR_SIZE                 49
#define ATTR_ENDPOINT_MAX_STR_SIZE                        255
#define ATTR_PORT_MAX_STR_SIZE                            17
#define ATTR_CLIENT_ID_MAX_STR_SIZE                       33
#define ATTR_TOPIC_PREFIX_MAX_STR_SIZE                    33
#define ATTR_GATEWAY_ID_MAX_STR_SIZE                      16
#define ATTR_ICCID_MAX_STR_SIZE                           21
#define ATTR_LTE_SERIAL_NUMBER_MAX_STR_SIZE               15
#define ATTR_LTE_VERSION_MAX_STR_SIZE                     30
#define ATTR_BANDS_MAX_STR_SIZE                           21
#define ATTR_ACTIVE_BANDS_MAX_STR_SIZE                    21
#define ATTR_SENSOR_BLUETOOTH_ADDRESS_MAX_STR_SIZE        31
#define ATTR_APN_MAX_STR_SIZE                             65
#define ATTR_APN_USERNAME_MAX_STR_SIZE                    66
#define ATTR_APN_PASSWORD_MAX_STR_SIZE                    66
#define ATTR_FOTA_FILE_NAME_MAX_STR_SIZE                  65
#define ATTR_LOAD_PATH_MAX_STR_SIZE                       33
#define ATTR_DUMP_PATH_MAX_STR_SIZE                       33
#define ATTR_LWM2M_CLIENT_ID_MAX_STR_SIZE                 33
#define ATTR_LWM2M_PEER_URL_MAX_STR_SIZE                  129
#define ATTR_IMSI_MAX_STR_SIZE                            16
#define ATTR_GPS_LATITUDE_MAX_STR_SIZE                    33
#define ATTR_GPS_LONGITUDE_MAX_STR_SIZE                   33
#define ATTR_GPS_TIME_MAX_STR_SIZE                        33
#define ATTR_GPS_FIX_TYPE_MAX_STR_SIZE                    4
#define ATTR_GPS_HEPE_MAX_STR_SIZE                        17
#define ATTR_GPS_ALTITUDE_MAX_STR_SIZE                    17
#define ATTR_GPS_ALT_UNC_MAX_STR_SIZE                     17
#define ATTR_GPS_HEADING_MAX_STR_SIZE                     17
#define ATTR_GPS_HOR_SPEED_MAX_STR_SIZE                   17
#define ATTR_GPS_VER_SPEED_MAX_STR_SIZE                   17
#define ATTR_POLTE_USER_MAX_STR_SIZE                      17
#define ATTR_POLTE_PASSWORD_MAX_STR_SIZE                  17
#define ATTR_POLTE_LATITUDE_MAX_STR_SIZE                  33
#define ATTR_POLTE_LONGITUDE_MAX_STR_SIZE                 33
#define ATTR_POLTE_CONFIDENCE_MAX_STR_SIZE                17

/* Attribute Byte Array Lengths */
#define ATTR_CT_AES_KEY_SIZE                              16
#define ATTR_LWM2M_PSK_SIZE                               16
/* pyend */

/* pystart - enumerations */
enum cert_status {
	CERT_STATUS_INCLUDE_ERRNO = INT32_MIN,
	CERT_STATUS_BUSY = 1,
	CERT_STATUS_SUCCESS = 0,
};

enum gateway_state {
	GATEWAY_STATE_POWER_UP_INIT = 0,
	GATEWAY_STATE_NETWORK_INIT = 1,
	GATEWAY_STATE_WAIT_FOR_NETWORK = 2,
	GATEWAY_STATE_NETWORK_CONNECTED = 3,
	GATEWAY_STATE_NETWORK_DISCONNECTED = 4,
	GATEWAY_STATE_NETWORK_ERROR = 5,
	GATEWAY_STATE_WAIT_FOR_COMMISSION = 6,
	GATEWAY_STATE_RESOLVE_SERVER = 7,
	GATEWAY_STATE_WAIT_BEFORE_CLOUD_CONNECT = 8,
	GATEWAY_STATE_CLOUD_CONNECTED = 9,
	GATEWAY_STATE_CLOUD_WAIT_FOR_DISCONNECT = 10,
	GATEWAY_STATE_CLOUD_DISCONNECTED = 11,
	GATEWAY_STATE_CLOUD_ERROR = 12,
	GATEWAY_STATE_FOTA_BUSY  = 13,
	GATEWAY_STATE_DECOMMISSION = 14,
	GATEWAY_STATE_CLOUD_REQUEST_DISCONNECT = 15,
	GATEWAY_STATE_CLOUD_CONNECTING = 16,
	GATEWAY_STATE_MODEM_INIT = 17,
	GATEWAY_STATE_MODEM_ERROR = 18,
};

enum peer_verify {
	PEER_VERIFY_NONE = 0,
	PEER_VERIFY_OPTIONAL = 1,
	PEER_VERIFY_REQUIRED = 2,
	PEER_VERIFY_UNSET = 3,
};

enum lte_network_state {
	LTE_NETWORK_STATE_NOT_REGISTERED = 0,
	LTE_NETWORK_STATE_HOME_NETWORK = 1,
	LTE_NETWORK_STATE_SEARCHING = 2,
	LTE_NETWORK_STATE_REGISTRATION_DENIED = 3,
	LTE_NETWORK_STATE_OUT_OF_COVERAGE = 4,
	LTE_NETWORK_STATE_ROAMING = 5,
	LTE_NETWORK_STATE_EMERGENCY = 8,
	LTE_NETWORK_STATE_UNABLE_TO_CONFIGURE = 240,
};

enum lte_startup_state {
	LTE_STARTUP_STATE_READY = 0,
	LTE_STARTUP_STATE_WAITING_FOR_ACCESS_CODE = 1,
	LTE_STARTUP_STATE_SIM_NOT_PRESENT = 2,
	LTE_STARTUP_STATE_SIM_LOCK = 3,
	LTE_STARTUP_STATE_UNRECOVERABLE_ERROR = 4,
	LTE_STARTUP_STATE_UNKNOWN = 5,
	LTE_STARTUP_STATE_INACTIVE_SIM = 6,
};

enum lte_sleep_state {
	LTE_SLEEP_STATE_UNINITIALIZED = 0,
	LTE_SLEEP_STATE_ASLEEP = 1,
	LTE_SLEEP_STATE_AWAKE = 2,
};

enum lte_rat {
	LTE_RAT_CAT_M1 = 0,
	LTE_RAT_CAT_NB1 = 1,
};

enum central_state {
	CENTRAL_STATE_FINDING_DEVICE = 0,
	CENTRAL_STATE_FINDING_SERVICE = 1,
	CENTRAL_STATE_FINDING_ESS_TEMPERATURE_CHAR = 2,
	CENTRAL_STATE_FINDING_ESS_HUMIDITY_CHAR = 3,
	CENTRAL_STATE_FINDING_ESS_PRESSURE_CHAR = 4,
	CENTRAL_STATE_CONNECTED_AND_CONFIGURED = 5,
	CENTRAL_STATE_FINDING_SMP_CHAR = 6,
	CENTRAL_STATE_CHALLENGE_REQUEST = 7,
	CENTRAL_STATE_CHALLENGE_RESPONSE = 8,
	CENTRAL_STATE_LOG_DOWNLOAD = 9,
};

enum modem_boot {
	MODEM_BOOT_NORMAL = 0,
	MODEM_BOOT_DELAYED = 1,
	MODEM_BOOT_AIRPLANE = 2,
};

enum fota_control_point {
	FOTA_CONTROL_POINT_NOP = 0,
	FOTA_CONTROL_POINT_MODEM_START = 2,
	FOTA_CONTROL_POINT_BLE_PREPARE = 16,
	FOTA_CONTROL_POINT_BLE_ABORT = 17,
};

enum fota_status {
	FOTA_STATUS_SUCCESS = 0,
	FOTA_STATUS_BUSY = 1,
	FOTA_STATUS_ERROR = 2,
};

enum generate_psk {
	GENERATE_PSK_LWM2M_DEFAULT = 0,
	GENERATE_PSK_LWM2M_RANDOM = 1,
};

enum lte_init_error {
	LTE_INIT_ERROR_NONE = 0,
	LTE_INIT_ERROR_NO_IFACE = -1,
	LTE_INIT_ERROR_IFACE_CFG = -2,
	LTE_INIT_ERROR_DNS_CFG = -3,
	LTE_INIT_ERROR_MODEM = -4,
	LTE_INIT_ERROR_AIRPLANE = -5,
};

enum cloud_error {
	CLOUD_ERROR_NONE = 0,
	CLOUD_ERROR_INIT_ENDPOINT = -1,
	CLOUD_ERROR_INIT_CLIENT_ID = -2,
	CLOUD_ERROR_INIT_ROOT_CA = -3,
	CLOUD_ERROR_READ_CRED_FS = -4,
	CLOUD_ERROR_CRED_SIZE = -5,
	CLOUD_ERROR_INIT_TOPIC_PREFIX = -6,
	CLOUD_ERROR_INIT_CLIENT_CERT = -7,
	CLOUD_ERROR_INIT_CLIENT_KEY = -8,
};

enum modem_functionality {
	MODEM_FUNCTIONALITY_INCLUDE_ERRNO = INT32_MIN,
	MODEM_FUNCTIONALITY_MINIMUM = 0,
	MODEM_FUNCTIONALITY_FULL = 1,
	MODEM_FUNCTIONALITY_AIRPLANE = 4,
};

enum gps_status {
	GPS_STATUS_INVALID = -1,
	GPS_STATUS_FIX_LOST_OR_NOT_AVAILABLE = 0,
	GPS_STATUS_PREDICTION_AVAILABLE = 1,
	GPS_STATUS_2D_AVAILABLE = 2,
	GPS_STATUS_3D_AVAILABLE = 3,
	GPS_STATUS_FIXED_TO_INVALID = 4,
};

enum polte_control_point {
	POLTE_CONTROL_POINT_RESERVED = 0,
	POLTE_CONTROL_POINT_REGISTER = 1,
	POLTE_CONTROL_POINT_ENABLE = 2,
	POLTE_CONTROL_POINT_LOCATE = 3,
};

enum polte_status {
	POLTE_STATUS_INCLUDE_ERRNO = INT32_MIN,
	POLTE_STATUS_SUCCESS = 0,
	POLTE_STATUS_MODEM_INVALID_STATE = 1,
	POLTE_STATUS_BAD_NUMBER_OF_FRAMES_TO_CAPTURE = 2,
	POLTE_STATUS_NOT_ENOUGH_MEMORY = 3,
	POLTE_STATUS_PENDING_RESPONSE_FROM_MODEM = 4,
	POLTE_STATUS_RETRYING_CAPTURE_ATTEMPT = 5,
	POLTE_STATUS_RESERVED = 6,
	POLTE_STATUS_DEVICE_ID_UNAVAILABLE = 7,
	POLTE_STATUS_DELAYING_CAPTURE_ATTEMPT_BECAUSE_OF_ONGOING_PAGING = 8,
	POLTE_STATUS_FLASH_WRITE_FAILURE = 9,
	POLTE_STATUS_SERVER_ERROR = 10,
	POLTE_STATUS_LOCATE_IN_PROGRESS = 100,
	POLTE_STATUS_BUSY = 127,
};

enum attr_dump {
	ATTR_DUMP_RW = 0,
	ATTR_DUMP_W = 1,
	ATTR_DUMP_RO = 2,
};

/* pyend */

/* pystart - enum size check */
BUILD_ASSERT(sizeof(enum cert_status) == ATTR_SIZE_S32);
BUILD_ASSERT(sizeof(enum gateway_state) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum peer_verify) == ATTR_SIZE_S8);
BUILD_ASSERT(sizeof(enum lte_network_state) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum lte_startup_state) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum lte_sleep_state) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum lte_rat) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum central_state) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum modem_boot) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum fota_control_point) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum fota_status) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum generate_psk) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum lte_init_error) == ATTR_SIZE_S8);
BUILD_ASSERT(sizeof(enum cloud_error) == ATTR_SIZE_S8);
BUILD_ASSERT(sizeof(enum modem_functionality) == ATTR_SIZE_S32);
BUILD_ASSERT(sizeof(enum gps_status) == ATTR_SIZE_S8);
BUILD_ASSERT(sizeof(enum polte_control_point) == ATTR_SIZE_U8);
BUILD_ASSERT(sizeof(enum polte_status) == ATTR_SIZE_S32);
/* pyend */

/******************************************************************************/
/* Global Function Prototypes                                                 */
/******************************************************************************/
/* The weak implementations should be overridden in application. */
/* pystart - prepare for read */
int attr_prepare_up_time(void);
int attr_prepare_power_voltage_mv(void);
int attr_prepare_qrtc(void);
int attr_prepare_qrtc_last_set(void);
int attr_prepare_modem_boot(void);
int attr_prepare_modem_functionality(void);
/* pyend */

/* pystart - get string */
const char *const attr_get_string_cert_status(int value);
const char *const attr_get_string_gateway_state(int value);
const char *const attr_get_string_peer_verify(int value);
const char *const attr_get_string_lte_network_state(int value);
const char *const attr_get_string_lte_startup_state(int value);
const char *const attr_get_string_lte_sleep_state(int value);
const char *const attr_get_string_lte_rat(int value);
const char *const attr_get_string_central_state(int value);
const char *const attr_get_string_modem_boot(int value);
const char *const attr_get_string_fota_control_point(int value);
const char *const attr_get_string_fota_status(int value);
const char *const attr_get_string_generate_psk(int value);
const char *const attr_get_string_lte_init_error(int value);
const char *const attr_get_string_cloud_error(int value);
const char *const attr_get_string_modem_functionality(int value);
const char *const attr_get_string_gps_status(int value);
const char *const attr_get_string_polte_control_point(int value);
const char *const attr_get_string_polte_status(int value);
/* pyend */

#ifdef __cplusplus
}
#endif

#endif /* __ATTRIBUTE_TABLE_H__ */
